{"version":3,"sources":["../src/geoloop.js"],"names":["moment","mapboxgl","d3","GeoLoop","ctrl","mapContainer","createMap","frames","currentFrameIndex","animation","pause","select","panel","id","on","stopAnimation","startAnimation","targetFrame","parseInt","property","stepFrame","console","log","mapCenterLonLat","parseFloat","mapCenterLongitude","mapCenterLatitude","accessToken","mbApiKey","map","Map","container","style","mapStyle","center","zoom","initialZoom","interactive","userInteractionEnabled","geoResult","addSource","e","legend","data","needToRedrawFrames","clearFrames","createFrames","forEach","item","removeLayer","error","dataCharacteristics","timeValues","geo","isSourceLoaded","createFramesSafely","attemptsLeft","interval","setInterval","clearInterval","sizeIsDynamic","sizeRamp","codeTo","colorIsDynamic","colorRamp","featureType","renderType","layerType","opts","layerTypes","sizeStops","colorStops","minInput","maxInput","auto","min","max","minValue","maxValue","nStops","iStop","stop","push","colorInterpolator","time","frameName","pp","geoFilter","duration","type","stops","fixedValue","addLayer","source","paint","filter","slider","attr","length","framesPerSecond","oldFrame","newFrame","opacitySelectors","selector","setPaintProperty","tstamp","timeStr","unix","format","hideTime","text","resize","panTo","mapCenterMoved","zoomFactor","setZoom","remove"],"mappings":"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","file":"geoloop.js","sourcesContent":["/* eslint-disable id-length, no-unused-vars */\nimport moment from 'moment';\nimport mapboxgl from './libs/mapbox-gl';\nimport * as d3 from './libs/d3';\n/* eslint-disable id-length, no-unused-vars */\n\nexport default class GeoLoop {\n  constructor(ctrl, mapContainer) {\n    this.ctrl = ctrl;\n    this.mapContainer = mapContainer;\n    this.createMap();\n    this.frames = []; // list of timestamps\n    this.currentFrameIndex = 0;\n    this.animation = {};\n    this.pause = false;\n    // register button click event\n    d3.select('#map_' + this.ctrl.panel.id + '_button').on('click', () => {\n      // toggle pause\n      this.pause = !this.pause;\n      if (this.pause) {\n        this.stopAnimation();\n      } else {\n        this.startAnimation();\n      }\n    });\n    // register slider input event\n    d3.select('#map_' + this.ctrl.panel.id + '_slider').on('input', () => {\n      // pause\n      this.pause = true;\n      this.stopAnimation();\n      // set frame to selected date/time\n      const targetFrame = parseInt(d3.select('#map_' + this.ctrl.panel.id + '_slider').property('value'), 10);\n      this.stepFrame(targetFrame);\n    });\n  }\n\n  createMap() {\n    console.log('creating mapbox-map');\n    const mapCenterLonLat = [parseFloat(this.ctrl.panel.mapCenterLongitude), parseFloat(this.ctrl.panel.mapCenterLatitude)];\n    mapboxgl.accessToken = this.ctrl.panel.mbApiKey;\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/' + this.ctrl.panel.mapStyle,\n      center: mapCenterLonLat,\n      zoom: parseFloat(this.ctrl.panel.initialZoom),\n      interactive: this.ctrl.panel.userInteractionEnabled\n    });\n    // load geo data if there already is some\n    if (this.ctrl.geoResult) {\n      console.log('loading cached geo data into mapbox-map');\n      try {\n        this.map.addSource(this.ctrl.geoResult);\n      } catch (e) {\n        console.log('add source error: ', e);\n      }\n      this.ctrl.geoResult = null;  // remove already used data\n    }\n  }\n\n  createLegend() {\n    this.legend = {};\n  }\n\n  needToRedrawFrames() {\n    this.legend = {};\n    return true;\n  }\n\n  drawLayerFrames() {\n    console.log('drawing layer frames');\n    const data = this.ctrl.data;\n    if (this.needToRedrawFrames(data)) {\n      this.stopAnimation();\n      this.clearFrames();\n      this.createFrames(data);\n      this.startAnimation();\n    }\n  }\n\n  clearFrames() {\n    this.frames.forEach((item) => {\n      try {\n        this.map.removeLayer('f-' + item);\n      } catch (e) {\n        // print error, but don't stop\n        console.error(e);\n      }\n    });\n    this.frames = [];\n  }\n\n  createFrames() {\n    if (!this.ctrl.dataCharacteristics.timeValues) {\n      console.log('no series to display (while trying to create frames)');\n      return;\n    }\n\n    if (!this.ctrl.geo) {\n      console.log('no geo data (while trying to create frames)');\n      return;\n    }\n\n    if (!this.map) {\n      console.log('no map found (while trying to create frames)');\n      return;\n    }\n\n    if (this.map.isSourceLoaded('geo')) {\n      console.log('geo source found on first try. Starting to build frames.');\n      this.createFramesSafely();\n    } else {\n      // console.log('no geo source in map. maybe not loaded?');\n      // this is stupid to use setInterval.\n      // but mapbox doesn't seem to have a on-source-loaded event that reliably works\n      // for this purpose.\n      let attemptsLeft = 10;\n      const interval = setInterval(() => {\n        if (!this.map) {\n          console.log('map was unloaded while waiting for geo source');\n          clearInterval(interval);\n        } else if (this.map.isSourceLoaded('geo')) {\n          console.log('geo source found. Starting to build frames.');\n          clearInterval(interval);\n          this.createFramesSafely();\n        } else {\n          console.log('still no geo source. try refresh manually?');\n          attemptsLeft -= 1;\n          if (attemptsLeft <= 0) {\n            clearInterval(interval);\n          }\n        }\n      }, 1000);\n    }\n  }\n\n  createFramesSafely() {\n    const sizeIsDynamic = (this.ctrl.panel.sizeRamp.codeTo === 'measurement');\n    const colorIsDynamic = (this.ctrl.panel.colorRamp.codeTo === 'measurement');\n    const featureType = this.ctrl.panel.renderType;\n    const layerType = this.ctrl.opts.layerTypes[featureType];\n    let sizeStops = [[0, 1], [100, 10]];\n    const colorStops = [];\n\n    if (sizeIsDynamic) {\n      // populate the sizeStops array with the input/output values\n      let minInput = 0;\n      let maxInput = 1;\n      if (this.ctrl.panel.sizeRamp.auto) {\n        minInput = this.ctrl.dataCharacteristics.min;\n        maxInput = this.ctrl.dataCharacteristics.max;\n      } else {\n        minInput = parseFloat(this.ctrl.panel.sizeRamp.minValue);\n        maxInput = parseFloat(this.ctrl.panel.sizeRamp.maxValue);\n      }\n\n      sizeStops = [[minInput, parseFloat(this.ctrl.panel.sizeRamp.min)], [maxInput, parseFloat(this.ctrl.panel.sizeRamp.max)]];\n      // console.log('size stops: ', sizeStops);\n    }\n\n    if (colorIsDynamic) {\n      // populate the sizeStops array with the input/output values\n      let minInput = 0;\n      let maxInput = 1;\n      if (this.ctrl.panel.colorRamp.auto) {\n        minInput = this.ctrl.dataCharacteristics.min;\n        maxInput = this.ctrl.dataCharacteristics.max;\n      } else {\n        minInput = parseFloat(this.ctrl.panel.colorRamp.minValue);\n        maxInput = parseFloat(this.ctrl.panel.colorRamp.maxValue);\n      }\n\n      const nStops = 25;\n\n      for (let iStop = 0; iStop <= nStops; iStop += 1) {\n        const stop = minInput + ((iStop / nStops) * (maxInput - minInput));\n        colorStops.push([stop, this.ctrl.panel.colorInterpolator(stop)]);\n      }\n\n      // console.log('color stops: ', colorStops);\n    }\n\n    this.ctrl.dataCharacteristics.timeValues.forEach((time) => {\n      const frameName = 'f-' + time;\n      // create new map layer for this animation frame (name is the time code)\n      const pp = {}; // paint properties\n      let geoFilter = [];\n      if (featureType === 'line') {\n        geoFilter = ['==', '$type', 'LineString'];\n        pp['line-opacity'] = 0;\n        pp['line-opacity-transition'] = { duration: 0 };\n        pp['line-width'] = sizeIsDynamic ? {\n          property: frameName,\n          type: 'exponential',\n          stops: sizeStops\n        } : parseFloat(this.ctrl.panel.sizeRamp.fixedValue);\n        pp['line-color'] = colorIsDynamic ? {\n          property: frameName,\n          type: 'exponential',\n          stops: colorStops\n        } : parseFloat(this.ctrl.panel.colorRamp.fixedValue);\n      } else if (featureType === 'point') {\n        geoFilter = ['==', '$type', 'Point'];\n        pp['circle-opacity'] = 0;\n        pp['circle-opacity-transition'] = { duration: 0 };\n        pp['circle-radius'] = sizeIsDynamic ? {\n          property: frameName,\n          type: 'exponential',\n          stops: sizeStops\n        } : parseFloat(this.ctrl.panel.sizeRamp.fixedValue);\n        pp['circle-color'] = colorIsDynamic ? {\n          property: frameName,\n          type: 'exponential',\n          stops: colorStops\n        } : this.ctrl.panel.colorRamp.fixedValue;\n      } else if (featureType === 'polygon') {\n        geoFilter = ['==', '$type', 'Polygon'];\n        pp['fill-opacity'] = 0;\n        pp['fill-opacity-transition'] = { duration: 0 };\n        pp['fill-color'] = colorIsDynamic ? {\n          property: frameName,\n          type: 'exponential',\n          stops: colorStops\n        } : this.ctrl.panel.colorRamp.fixedValue;\n      }\n\n      this.map.addLayer({\n        id: 'f-' + time,\n        type: layerType,\n        source: 'geo',\n        paint: pp,\n        filter: geoFilter,\n      });\n\n      this.frames.push(time);\n    });\n\n    // get slider component, set min/max/value\n    const slider = d3.select('#map_' + this.ctrl.panel.id + '_slider')\n      .attr('min', 0)\n      .attr('max', this.frames.length);\n  }\n\n\n  startAnimation() {\n    if (this.animation) {\n      this.stopAnimation();\n    }\n\n    this.animation = setInterval(() => {\n      this.stepFrame();\n    }, 1000 / this.ctrl.panel.framesPerSecond);\n  }\n\n  stopAnimation() {\n    clearInterval(this.animation);\n    this.animation = null;\n  }\n\n  stepFrame(targetFrame = -1) {\n    if (!this.map) {\n      return;\n    }\n    if (this.frames.length === 0) {\n      // console.log('skipping animation: no frames');\n      return;\n    }\n    const oldFrame = 'f-' + this.frames[this.currentFrameIndex];\n    this.currentFrameIndex = targetFrame >= 0 ? targetFrame : this.currentFrameIndex + 1;\n    this.currentFrameIndex %= this.frames.length;\n    const newFrame = 'f-' + this.frames[this.currentFrameIndex];\n\n    const opacitySelectors = {\n      'point': 'circle-opacity',\n      'polygon': 'fill-opacity',\n      'line': 'line-opacity'\n    };\n    const selector = opacitySelectors[this.ctrl.panel.renderType];\n\n    this.map.setPaintProperty(newFrame, selector, 1);\n    this.map.setPaintProperty(oldFrame, selector, 0);\n    const tstamp = this.frames[this.currentFrameIndex] / 1e3;\n    const timeStr = moment.unix(tstamp).format(this.ctrl.panel.hideTime ? 'YYYY-MM-DD' : 'YYYY-MM-DD HH:mm:ss');\n\n    // set time string in legend\n    d3.select('#map_' + this.ctrl.panel.id + '_date').text(timeStr);\n    // set slider position to indicate time-location\n    d3.select('#map_' + this.ctrl.panel.id + '_slider').property('value', this.currentFrameIndex);\n  }\n\n  resize() {\n    this.map.resize();\n  }\n\n  panToMapCenter() {\n    this.map.panTo([parseFloat(this.ctrl.panel.mapCenterLongitude), parseFloat(this.ctrl.panel.mapCenterLatitude)]);\n    this.ctrl.mapCenterMoved = false;\n  }\n\n  setZoom(zoomFactor) {\n    this.map.setZoom(parseInt(zoomFactor, 10));\n  }\n\n  remove() {\n    this.stopAnimation();\n    // this.clearFrames();  // this is probably not necessary\n    if (this.map) {\n      this.map.remove();\n    }\n    this.map = null;\n  }\n}\n"]}