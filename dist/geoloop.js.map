{"version":3,"sources":["../src/geoloop.js"],"names":["moment","mapboxgl","d3","GeoLoop","ctrl","mapContainer","createMap","frames","currentFrameIndex","animation","pause","select","panel","id","on","stopAnimation","startAnimation","parseInt","property","stepFrame","console","log","mapCenterLonLat","parseFloat","mapCenterLongitude","mapCenterLatitude","accessToken","mbApiKey","map","Map","container","style","mapStyle","center","zoom","initialZoom","interactive","userInteractionEnabled","legend","data","needToRedrawFrames","clearFrames","createFrames","forEach","item","removeLayer","e","error","dataCharacteristics","timeValues","geo","isSourceLoaded","createFramesSafely","attemptsLeft","interval","setInterval","clearInterval","sizeIsDynamic","sizeRamp","codeTo","colorIsDynamic","colorRamp","featureType","renderType","layerType","opts","layerTypes","sizeStops","colorStops","minInput","maxInput","auto","min","max","minValue","maxValue","nStops","iStop","stop","push","colorInterpolator","time","frameName","pp","geoFilter","duration","type","stops","fixedValue","addLayer","source","paint","filter","slider","attr","length","framesPerSecond","oldFrame","newFrame","opacitySelectors","selector","setPaintProperty","tstamp","timeStr","unix","format","hideTime","text","resize","panTo","mapCenterMoved","zoomFactor","setZoom","remove"],"mappings":"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","file":"geoloop.js","sourcesContent":["/* eslint-disable id-length, no-unused-vars */\nimport moment from 'moment';\nimport mapboxgl from './libs/mapbox-gl';\nimport * as d3 from './libs/d3';\n/* eslint-disable id-length, no-unused-vars */\n\nexport default class GeoLoop {\n  constructor(ctrl, mapContainer) {\n    this.ctrl = ctrl;\n    this.mapContainer = mapContainer;\n    this.createMap();\n    this.frames = []; // list of timestamps\n    this.currentFrameIndex = 0;\n    this.animation = {};\n    this.pause = false;\n    // register button click event\n    d3.select('#map_' + this.ctrl.panel.id + '_button').on('click', () => {\n      this.pause = !this.pause;\n      if (this.pause) {\n        this.stopAnimation();\n      } else {\n        this.startAnimation();\n      }\n    });\n    // register slider input event\n    d3.select('#map_' + this.ctrl.panel.id + '_slider').on('input', () => {\n      this.pause = true;\n      this.stopAnimation();\n      this.currentFrameIndex = parseInt(d3.select('#map_' + this.ctrl.panel.id + '_slider').property('value'), 10);\n      this.stepFrame();\n    });\n  }\n\n  createMap() {\n    console.log('rebuilding map');\n    const mapCenterLonLat = [parseFloat(this.ctrl.panel.mapCenterLongitude), parseFloat(this.ctrl.panel.mapCenterLatitude)];\n    mapboxgl.accessToken = this.ctrl.panel.mbApiKey;\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/' + this.ctrl.panel.mapStyle,\n      center: mapCenterLonLat,\n      zoom: parseFloat(this.ctrl.panel.initialZoom),\n      interactive: this.ctrl.panel.userInteractionEnabled\n    });\n  }\n\n  createLegend() {\n    this.legend = {};\n  }\n\n  needToRedrawFrames() {\n    this.legend = {};\n    return true;\n  }\n\n  drawLayerFrames() {\n    const data = this.ctrl.data;\n    if (this.needToRedrawFrames(data)) {\n      this.stopAnimation();\n      this.clearFrames();\n      this.createFrames(data);\n      this.startAnimation();\n    }\n  }\n\n  clearFrames() {\n    this.frames.forEach((item) => {\n      try {\n        this.map.removeLayer('f-' + item);\n      } catch (e) {\n        // print error, but don't stop\n        console.error(e);\n      }\n    });\n    this.frames = [];\n  }\n\n  createFrames() {\n    if (!this.ctrl.dataCharacteristics.timeValues) {\n      console.log('no series to display');\n      return;\n    }\n\n    if (!this.ctrl.geo) {\n      console.log('no geo data');\n      return;\n    }\n\n    if (!this.map) {\n      console.log('no map found');\n      return;\n    }\n\n    if (this.map.isSourceLoaded('geo')) {\n      console.log('geo source found on first try. Starting to build frames.');\n      this.createFramesSafely();\n    } else {\n      // console.log('no geo source in map. maybe not loaded?');\n      // this is stupid to use setInterval.\n      // but mapbox doesn't seem to have a on-source-loaded event that reliably works\n      // for this purpose.\n      let attemptsLeft = 10;\n      const interval = setInterval(() => {\n        if (!this.map) {\n          console.log('map was unloaded while waiting for geo source');\n          clearInterval(interval);\n        } else if (this.map.isSourceLoaded('geo')) {\n          console.log('geo source found. Starting to build frames.');\n          clearInterval(interval);\n          this.createFramesSafely();\n        } else {\n          console.log('still no geo source. try refresh manually?');\n          attemptsLeft -= 1;\n          if (attemptsLeft <= 0) {\n            clearInterval(interval);\n          }\n        }\n      }, 1000);\n    }\n  }\n\n  createFramesSafely() {\n    const sizeIsDynamic = (this.ctrl.panel.sizeRamp.codeTo === 'measurement');\n    const colorIsDynamic = (this.ctrl.panel.colorRamp.codeTo === 'measurement');\n    const featureType = this.ctrl.panel.renderType;\n    const layerType = this.ctrl.opts.layerTypes[featureType];\n    let sizeStops = [[0, 1], [100, 10]];\n    const colorStops = [];\n\n    if (sizeIsDynamic) {\n      // populate the sizeStops array with the input/output values\n      let minInput = 0;\n      let maxInput = 1;\n      if (this.ctrl.panel.sizeRamp.auto) {\n        minInput = this.ctrl.dataCharacteristics.min;\n        maxInput = this.ctrl.dataCharacteristics.max;\n      } else {\n        minInput = parseFloat(this.ctrl.panel.sizeRamp.minValue);\n        maxInput = parseFloat(this.ctrl.panel.sizeRamp.maxValue);\n      }\n\n      sizeStops = [[minInput, parseFloat(this.ctrl.panel.sizeRamp.min)], [maxInput, parseFloat(this.ctrl.panel.sizeRamp.max)]];\n      // console.log('size stops: ', sizeStops);\n    }\n\n    if (colorIsDynamic) {\n      // populate the sizeStops array with the input/output values\n      let minInput = 0;\n      let maxInput = 1;\n      if (this.ctrl.panel.colorRamp.auto) {\n        minInput = this.ctrl.dataCharacteristics.min;\n        maxInput = this.ctrl.dataCharacteristics.max;\n      } else {\n        minInput = parseFloat(this.ctrl.panel.colorRamp.minValue);\n        maxInput = parseFloat(this.ctrl.panel.colorRamp.maxValue);\n      }\n\n      const nStops = 25;\n\n      for (let iStop = 0; iStop <= nStops; iStop += 1) {\n        const stop = minInput + ((iStop / nStops) * (maxInput - minInput));\n        colorStops.push([stop, this.ctrl.panel.colorInterpolator(stop)]);\n      }\n\n      // console.log('color stops: ', colorStops);\n    }\n\n    this.ctrl.dataCharacteristics.timeValues.forEach((time) => {\n      const frameName = 'f-' + time;\n      // create new map layer for this animation frame (name is the time code)\n      const pp = {}; // paint properties\n      let geoFilter = [];\n      if (featureType === 'line') {\n        geoFilter = ['==', '$type', 'LineString'];\n        pp['line-opacity'] = 0;\n        pp['line-opacity-transition'] = { duration: 0 };\n        pp['line-width'] = sizeIsDynamic ? {\n          property: frameName,\n          type: 'exponential',\n          stops: sizeStops\n        } : parseFloat(this.ctrl.panel.sizeRamp.fixedValue);\n        pp['line-color'] = colorIsDynamic ? {\n          property: frameName,\n          type: 'exponential',\n          stops: colorStops\n        } : parseFloat(this.ctrl.panel.colorRamp.fixedValue);\n      } else if (featureType === 'point') {\n        geoFilter = ['==', '$type', 'Point'];\n        pp['circle-opacity'] = 0;\n        pp['circle-opacity-transition'] = { duration: 0 };\n        pp['circle-radius'] = sizeIsDynamic ? {\n          property: frameName,\n          type: 'exponential',\n          stops: sizeStops\n        } : parseFloat(this.ctrl.panel.sizeRamp.fixedValue);\n        pp['circle-color'] = colorIsDynamic ? {\n          property: frameName,\n          type: 'exponential',\n          stops: colorStops\n        } : this.ctrl.panel.colorRamp.fixedValue;\n      } else if (featureType === 'polygon') {\n        geoFilter = ['==', '$type', 'Polygon'];\n        pp['fill-opacity'] = 0;\n        pp['fill-opacity-transition'] = { duration: 0 };\n        pp['fill-color'] = colorIsDynamic ? {\n          property: frameName,\n          type: 'exponential',\n          stops: colorStops\n        } : this.ctrl.panel.colorRamp.fixedValue;\n      }\n\n      this.map.addLayer({\n        id: 'f-' + time,\n        type: layerType,\n        source: 'geo',\n        paint: pp,\n        filter: geoFilter,\n      });\n\n      this.frames.push(time);\n    });\n\n    // get slider component, set min/max/value\n    const slider = d3.select('#map_' + this.ctrl.panel.id + '_slider')\n      .attr('min', 0)\n      .attr('max', this.frames.length);\n  }\n\n\n  startAnimation() {\n    if (this.animation) {\n      this.stopAnimation();\n    }\n\n    this.animation = setInterval(() => {\n      this.stepFrame();\n    }, 1000 / this.ctrl.panel.framesPerSecond);\n  }\n\n  stopAnimation() {\n    clearInterval(this.animation);\n    this.animation = null;\n  }\n\n  stepFrame() {\n    if (!this.map) {\n      return;\n    }\n    if (this.frames.length === 0) {\n      // console.log('skipping animation: no frames');\n      return;\n    }\n    const oldFrame = 'f-' + this.frames[this.currentFrameIndex];\n    this.currentFrameIndex += 1;\n    if (this.currentFrameIndex >= this.frames.length) {\n      this.currentFrameIndex = 0;\n    }\n    const newFrame = 'f-' + this.frames[this.currentFrameIndex];\n\n    const opacitySelectors = {\n      'point': 'circle-opacity',\n      'polygon': 'fill-opacity',\n      'line': 'line-opacity'\n    };\n    const selector = opacitySelectors[this.ctrl.panel.renderType];\n\n    this.map.setPaintProperty(newFrame, selector, 1);\n    this.map.setPaintProperty(oldFrame, selector, 0);\n    const tstamp = this.frames[this.currentFrameIndex] / 1e3;\n    const timeStr = moment.unix(tstamp).format(this.ctrl.panel.hideTime ? 'YYYY-MM-DD' : 'YYYY-MM-DD HH:mm:ss');\n\n    // set time string in legend\n    d3.select('#map_' + this.ctrl.panel.id + '_date').text(timeStr);\n    // set slider position to indicate time-location\n    d3.select('#map_' + this.ctrl.panel.id + '_slider').property('value', this.currentFrameIndex);\n  }\n\n  resize() {\n    this.map.resize();\n  }\n\n  panToMapCenter() {\n    this.map.panTo([parseFloat(this.ctrl.panel.mapCenterLongitude), parseFloat(this.ctrl.panel.mapCenterLatitude)]);\n    this.ctrl.mapCenterMoved = false;\n  }\n\n  setZoom(zoomFactor) {\n    this.map.setZoom(parseInt(zoomFactor, 10));\n  }\n\n  remove() {\n    if (this.map) {\n      this.map.remove();\n    }\n    this.map = null;\n  }\n}\n"]}