{"version":3,"sources":["../src/geoloop_ctrl.js"],"names":["MetricsPanelCtrl","TimeSeries","kbn","contextSrv","_","d3","mapRenderer","DataFormatter","panelDefaults","mbApiKey","mapStyle","mapCenterLatitude","mapCenterLongitude","initialZoom","userInteractionEnabled","animationSpeed","animationPause","geoIdTag","geo","location","contents","callback","renderType","sizeRamp","codeTo","fixedValue","measurement","auto","min","max","minValue","maxValue","showLegend","legendPosition","colorRamp","scaleName","GeoLoopCtrl","$scope","$injector","dataCharacteristics","opts","renderTypes","colorRamps","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","mapStyles","featureTypes","layerTypes","defaults","panel","setMapProviderOpts","dataFormatter","events","on","onInitEditMode","bind","onDataReceived","onPanelTeardown","onDataSnapshotLoad","loadGeo","lonLatStr","Object","keys","center","map","getCenter","lng","lat","coords","split","strVal","Number","trim","mapCenterMoved","render","user","lightTheme","saturationClass","stopAnimation","clearFrames","setStyle","updateGeoDataFeatures","reload","snapshotLocationData","window","$","ajax","type","url","contentType","jsonpCallback","dataType","success","res","fail","console","log","remove","addEditorTab","dataList","dashboard","snapshot","series","seriesHandler","getCharacteristics","changeRampOptions","snapshotData","seriesData","datapoints","alias","target","flotpairs","getFlotPairs","nullPointMode","setZoom","features","timeValues","forEach","tv","feature","fname","properties","keyedSeries","geoKeySearch","reStr","reg","RegExp","matches","match","length","fName","id","point","time","val","getSource","removeSource","addSource","data","dc","colorInterpolator","inputRange","theRamp","scaleSequential","domain","interpolator","sizeInterpolator","px","py","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"geoloop_ctrl.js","sourcesContent":["/* eslint import/no-extraneous-dependencies: 0 */\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\nimport {contextSrv} from 'app/core/core';\n\nimport _ from 'lodash';\nimport * as d3 from './libs/d3';\nimport mapRenderer from './map_renderer';\nimport DataFormatter from './data_formatter';\nimport './css/geoloop-panel.css!';\n\nconst panelDefaults = {\n  mbApiKey: 'pk.eyXXXXXXX',\n  mapStyle: 'streets-v10', // see opts below\n  mapCenterLatitude: 0,\n  mapCenterLongitude: 0,\n  initialZoom: 8,\n  userInteractionEnabled: true,\n  animationSpeed: 1, // # of seconds animation time per day of data\n  animationPause: 500, // millisecond pause at end of animation loop\n  geoIdTag: 'geo_id',\n  geo: {\n    location: 'url', // one of: url, text\n    contents: 'xxxxxx', // either the jsonp url or the json text itself\n    callback: 'data' // named callback in jsonp contents\n  },\n  renderType: 'line', // one of: line,point,polygon\n  sizeRamp: {\n    codeTo: 'fixed', // or 'measurement'\n    fixedValue: 5,\n    measurement: 'measurement_name',\n    auto: false,\n    min: 1,\n    max: 10,\n    minValue: 0,\n    maxValue: 100,\n    showLegend: true,\n    legendPosition: 'l'\n  },\n  colorRamp: {\n    codeTo: 'fixed', // or 'measurement'\n    fixedValue: '#0000ff',\n    measurement: 'measurement_name',\n    auto: false,\n    minValue: 1,\n    maxValue: 100,\n    scaleName: 'viridis', // one of D3's color ramps\n    showLegend: true,\n    legendPosition: 'l'\n  },\n};\n\nexport default class GeoLoopCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, contextSrv) {\n    super($scope, $injector);\n\n    this.dataCharacteristics = {};\n\n    this.opts = {\n      renderTypes: ['line', 'point', 'polygon'],\n      colorRamps: { /*\n      for some reason, the extra d3-scale-chromatic library is hard to import ??\n        'BrBG': scale.interpolateBrBG,\n        'PRGn': scale.interpolatePRGn,\n        'PiYG': scale.interpolatePiYG,\n        'PuOr': scale.interpolatePuOr,\n        'RdBu': scale.interpolateRdBu,\n        'RdGy': scale.interpolateRdGy,\n        'RdYlBu': scale.interpolateRdYlBu,\n        'RdYlGn': scale.interpolateRdYlGn,\n        'Spectral': scale.interpolateSpectral,\n        'Blues': scale.interpolateBlues,\n        'Greens': scale.interpolateGreens,\n        'Greys': scale.interpolateGreys,\n        'Oranges': scale.interpolateOranges,\n        'Purples': scale.interpolatePurples,\n        'Reds': scale.interpolateReds,\n        'BuGn': scale.interpolateBuGn,\n        'BuPu': scale.interpolateBuPu,\n        'GnBu': scale.interpolateGnBu,\n        'OrRd': scale.interpolateOrRd,\n        'PuBuGn': scale.interpolatePuBuGn,\n        'PuBu': scale.interpolatePuBu,\n        'PuRd': scale.interpolatePuRd,\n        'RdPu': scale.interpolateRdPu,\n        'YlGnBu': scale.interpolateYlGnBu,\n        'YlGn': scale.interpolateYlGn,\n        'YlOrBr': scale.interpolateYlOrBr,\n        'YlOrRd': scale.interpolateYlOrRd */\n        'cubehelix': d3.interpolateCubehelixDefault,\n        'rainbow': d3.interpolateRainbow,\n        'warm': d3.interpolateWarm,\n        'cool': d3.interpolateCool,\n        'viridis': d3.interpolateViridis,\n        'magma': d3.interpolateMagma,\n        'inferno': d3.interpolateInferno,\n        'plasma': d3.interpolatePlasma\n      },\n      mapStyles: {\n        'streets': 'streets-v10',\n        'outdoors': 'outdoors-v10',\n        'light': 'light-v9',\n        'dark': 'dark-v9',\n        'satellite': 'satellite-v9',\n        'satellite-streets': 'satellite-streets-v10',\n        'traffic': 'traffic-day-v2',\n        'traffic-night': 'traffic-night-v2'\n      },\n      featureTypes: {\n        'Point': 'point',\n        'Line': 'line',\n        'Polygon': 'polygon'\n      },\n      layerTypes: {\n        'point': 'circle',\n        'polygon': 'fill',\n        'line': 'line'\n      }\n    };\n    /* set defaults: */\n    _.defaults(this.panel, panelDefaults);\n    _.defaults(this.panel, panelDefaults.colorRamp);\n    _.defaults(this.panel, panelDefaults.sizeRamp);\n    _.defaults(this.panel, panelDefaults.geo);\n    this.setMapProviderOpts();\n\n    this.dataFormatter = new DataFormatter(this, kbn);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n\n    this.loadGeo();\n    this.lonLatStr = this.panel.mapCenterLongitude + ',' + this.panel.mapCenterLatitude;\n\n    //$scope.$root.onAppEvent('show-dash-editor', this.doMapResize());\n    //$scope.$root.onAppEvent('hide-dash-editor', this.doMapResize());\n  }\n\n  getColorScaleImgUrl() {\n    return '/public/plugins/citilogics-geoloop-panel/images/colorRamps/' + this.panel.colorRamp.scaleName + '.png';\n  }\n  getColorNames() {\n    return Object.keys(this.opts.colorRamps);\n  }\n\n  setLocationFromMap() {\n    const center = this.map.map.getCenter();\n    this.panel.mapCenterLongitude = center.lng;\n    this.panel.mapCenterLatitude = center.lat;\n    this.lonLatStr = this.panel.mapCenterLongitude + ',' + this.panel.mapCenterLatitude;\n  }\n\n  setNewMapCenter() {\n    const coords = this.lonLatStr.split(',').map((strVal) => {\n      return Number(strVal.trim());\n    });\n    this.panel.mapCenterLongitude = coords[0];\n    this.panel.mapCenterLatitude = coords[1];\n\n    this.mapCenterMoved = true;\n    this.render();\n  }\n\n  setMapProviderOpts() {\n    if (contextSrv.user.lightTheme) {\n      this.saturationClass = '';\n    } else {\n      this.saturationClass = 'map-darken';\n    }\n\n    if (this.map) {\n      this.map.stopAnimation();\n      this.map.clearFrames();\n      this.map.map.setStyle('mapbox://styles/mapbox/' + this.panel.mapStyle).on('style.load', () => {\n        this.updateGeoDataFeatures();\n        this.render();\n      });\n    }\n\n  }\n\n  loadGeo(reload) {\n    if (this.map && !reload) {\n      return;\n    }\n\n    if (this.panel.snapshotLocationData) {\n      this.geo = this.panel.snapshotLocationData;\n      return;\n    }\n\n    if (this.panel.geo.location === 'url') {\n      if (!this.panel.geo.contents) {\n        return;\n      }\n      window.$.ajax({\n        type: 'GET',\n        url: this.panel.geo.contents + '?callback=?',\n        contentType: 'application/json',\n        jsonpCallback: this.panel.geo.callback,\n        dataType: 'jsonp',\n        success: (res) => {\n          // console.log('got geojson: ', res);\n          this.geo = res;\n          this.render();\n        }\n      }).fail((res) => {\n        console.log('error in ajax: ', res);\n        this.geo = null;\n        this.render();\n      });\n    } else if (this.panel.geo.location === 'text') {\n      // nothing\n    }\n  }\n\n  onPanelTeardown() {\n    if (this.map) this.map.remove();\n  }\n\n  onInitEditMode() {\n    console.log('init edit mode');\n    this.addEditorTab('GeoLoop', 'public/plugins/citilogics-geoloop-panel/partials/editor.html');\n  }\n\n  onDataReceived(dataList) {\n    // console.log('ctrl recieved data: ', dataList);\n    if (!dataList) return;\n\n    if (this.dashboard.snapshot && this.geo) {\n      this.panel.snapshotLocationData = this.geo;\n    }\n\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    // console.log('series: ', this.series);\n    this.dataCharacteristics = this.dataFormatter.getCharacteristics();\n    this.changeRampOptions(this.dataCharacteristics);\n\n    this.updateGeoDataFeatures();\n    this.render();\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.onDataReceived(snapshotData);\n  }\n\n  seriesHandler(seriesData) {\n    const series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  setZoom() {\n    this.map.setZoom(this.panel.initialZoom || 1);\n  }\n\n  toggleLegend() {\n    this.render();\n  }\n\n  updateGeoDataFeatures() {\n    if (!this.geo || !this.geo.features) {\n      // console.log('no geo or no features');\n      return;\n    }\n\n    // clear timeseries data from geojson data\n    this.dataCharacteristics.timeValues.forEach((tv) => {\n      this.geo.features.forEach((feature) => {\n        const fname = 'f-' + tv;\n        if (feature.properties && feature.properties[fname]) {\n          delete feature.properties[fname];\n        }\n      });\n    });\n\n\n    // organize the series data - using the \"tag\" user has selected for correspondence with feature.id:\n    const keyedSeries = {};\n    const geoKeySearch = this.panel.geoIdTag + ':';\n    const reStr = geoKeySearch + ' ([^,}]+)';\n    const reg = new RegExp(reStr);\n    this.series.forEach((series) => {\n      // expect series.alias to be of the form --> \"measure.aggregator {tagKey: tagVal, tagKey: tagVal}\"\n      const matches = series.alias.match(reg);\n      // console.log('matches: ', matches);\n      if (matches.length > 1) {\n        keyedSeries[matches[1]] = series;\n      }\n    });\n\n    // console.log('features: ', this.geo.features);\n    // console.log('keyed series: ', keyedSeries);\n\n    // put data into features.\n    this.geo.features.forEach((feature) => {\n      if (!feature.properties) {\n        feature.properties = {};\n      }\n      const fName = feature.id;\n      if (fName in keyedSeries) {\n        const series = keyedSeries[fName];\n        series.datapoints.forEach((point) => {\n          const time = point[1];\n          const val = point[0];\n          feature.properties['f-' + time] = val;\n        });\n      }\n    });\n\n    if (this.map && this.map.map.getSource('geo')) {\n      // console.log('geojson source found. removing...');\n      this.map.map.removeSource('geo');\n    }\n    if (this.geo && this.map) {\n      // console.log('adding geojson source...');\n      this.map.map.addSource('geo', {\n        type: 'geojson',\n        data: this.geo\n      });\n    }\n  }\n\n\n  changeRampOptions(dc) { // dc :: data characteristics (dc{timeValues, min, max})\n    if (this.panel.colorRamp.codeTo === 'fixed') {\n      this.panel.colorInterpolator = () => { return this.panel.colorRamp.fixedValue; };\n    } else {\n      const inputRange = this.panel.colorRamp.auto ? [dc.min, dc.max] : [this.panel.colorRamp.minValue, this.panel.colorRamp.maxValue];\n      const theRamp = this.opts.colorRamps[this.panel.colorRamp.scaleName];\n      // console.log('color ramp name: ', this.panel.colorRamp.scaleName);\n      // console.log('color ramp: ', theRamp);\n      this.panel.colorInterpolator = d3.scaleSequential().domain(inputRange).interpolator(theRamp);\n    }\n\n    if (this.panel.sizeRamp.codeTo === 'fixed') {\n      this.panel.sizeInterpolator = () => { return this.panel.sizeRamp.fixedValue; };\n    } else {\n      const px = this.panel.sizeRamp.auto ? [dc.min, dc.max] : [this.panel.sizeRamp.minValue, this.panel.sizeRamp.maxValue];\n      const py = [this.panel.sizeRamp.min, this.panel.sizeRamp.max];\n      this.panel.sizeInterpolator = (val) => { return py[0] + (((val - px[0]) * (py[1] - py[0])) / (px[1] - px[0])); };\n    }\n\n    this.render();\n  }\n\n\n/* eslint class-methods-use-this: 0 */\n  link(scope, elem, attrs, ctrl) {\n    mapRenderer(scope, elem, attrs, ctrl);\n  }\n}\n\nGeoLoopCtrl.templateUrl = 'module.html';\n"]}